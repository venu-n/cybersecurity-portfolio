## 2. Cryptographic Failures
   Overview: Weak or incorrect use of cryptography leads to exposure  
   of sensitive data (in transit or at rest)

   Impact:
     Disclosure of PII, passwords, credit card data, or health records
     Non-compliance with regulations (GDPR, HIPAA, PCI-DSS)
     Enables credential theft, replay attacks, and data breaches

   Attack Vectors & Remediation
     a. Plaintext Transmission (HTTP instead of HTTPS)
          Vector: Data sent without encryption --> intercepted via sniffing (MITM)
          Remediation: Enforce TLS 1.2+ everywhere; HSTS; disable HTTP
     b. Weak or Deprecated Algorithms
          Vector: Use of MD5, SHA1, DES, RC4 â†’ easily cracked with modern hardware
          Remediation: Use strong algorithms (AES-256, SHA-256, RSA-2048+)
     c. Hardcoded or Exposed Keys
          Vector: Keys/secrets left in code, repos, config files
          Remediation: Store keys securely (vaults, HSMs); rotate keys regularly
     d. Improper Password Storage
          Vector: Storing passwords in plaintext or weak hashes
          Remediation: Hash with strong adaptive functions (bcrypt, scrypt, Argon2)
     e. Insecure Protocols
         Vector: Use of FTP, Telnet, SMTP without TLS
         Remediation: Replace with SFTP, SSH, SMTPS
     f. Lack of Encryption at Rest
         Vector: Databases/disks store sensitive data without encryption
         Remediation: Encrypt data at rest with AES-256; manage keys securely
